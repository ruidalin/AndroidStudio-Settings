<application>
  <component name="AppStorage">
    <option name="newTranslationDialogWidth" value="596" />
    <option name="newTranslationDialogX" value="824" />
    <option name="newTranslationDialogY" value="450" />
    <option name="pinNewTranslationDialog" value="true" />
    <histories>
      <item value="do On Terminate" />
      <item value="do On Dispose" />
      <item value="compose" />
      <item value="This can only be used in conjunction with {@link FLAG_ACTIVITY_NEW_TASK}." />
      <item value="otherwise" />
      <item value="If set in an Intent passed to {@link ContextstartActivity Context.startActivity()}, this flag will cause any existing task that would be associated with the activity to be cleared before the activity is started. That is, the activity becomes the new root of an otherwise empty task, and any old activities are finished. This can only be used in conjunction with {@link FLAG_ACTIVITY_NEW_TASK}." />
      <item value="&lt;p&gt;&lt;strong&gt;Because the default system does not include graphical task management, you should not use this flag unless you provide some way for a user to return back to the tasks you have launched.&lt;strong&gt;" />
      <item value="&lt;strong&gt;When used with {@link FLAG_ACTIVITY_NEW_TASK} do not use this flag unless you are implementing your own top-level application launcher.&lt;strong&gt; Used in conjunction with {@link FLAG_ACTIVITY_NEW_TASK} to disable the behavior of bringing an existing task to the foreground. When set, a new task is &lt;em&gt;always&lt;em&gt; started to host the Activity for the Intent, regardless of whether there is already an existing task running the same thing." />
      <item value="This flag is used to create a new task and launch an activity into it. This flag is always paired with either {@link FLAG_ACTIVITY_NEW_DOCUMENT} or {@link FLAG_ACTIVITY_NEW_TASK}. In both cases these flags alone would search through existing tasks for ones matching this Intent. Only if no such task is found would a new task be created. When paired with FLAG_ACTIVITY_MULTIPLE_TASK both of these behaviors are modified to skip the search for a matching task and unconditionally start a new task." />
      <item value="&lt;p&gt;The currently running instance of activity B in the above example will either receive the new intent you are starting here in its onNewIntent() method, or be itself finished and restarted with the new intent. If it has declared its launch mode to be &quot;multiple&quot; (the default) and you have not set {@link FLAG_ACTIVITY_SINGLE_TOP} in the same intent, then it will be finished and re-created; for all other launch modes or if {@link FLAG_ACTIVITY_SINGLE_TOP} is set then this Intent will be delivered to the current instance's onNewIntent()." />
      <item value="&lt;p&gt;For example, consider a task consisting of the activities: A, B, C, D. If D calls startActivity() with an Intent that resolves to the component of activity B, then C and D will be finished and B receive the given Intent, resulting in the stack now being: A, B." />
      <item value="If set, and the activity being launched is already running in the current task, then instead of launching a new instance of that activity, all of the other activities on top of it will be closed and this Intent will be delivered to the (now on top) old activity as a new Intent." />
      <item value="If set, and the activity being launched is already running in the current task," />
      <item value="reply TTS" />
      <item value="domain" />
      <item value="get Ambient Light" />
      <item value="key outside launcher" />
      <item value="is Outside Jump" />
      <item value="The identifier of this intent or null if none is specified." />
      <item value="@return" />
      <item value="Retrieve the identifier for this Intent. If non-null, this is an arbitrary identity of the Intent to distinguish it from other Intents." />
      <item value="Retrieve the application package name this Intent is limited to. When resolving an Intent, if non-null this limits the resolution to only components in the given application package." />
      <item value="If false then this only works if the activity is the root of a task; if true it will work for any activity in a task." />
      <item value="Indicates whether the current attempt to connect to the network resulted from the ConnectivityManager trying to fail over to this network following a disconnect from another network. @return {@code true} if this is a failover attempt, {@code false}" />
      <item value="is Failover" />
      <item value="Always call this before attempting to perform data transactions." />
      <item value="Indicates whether network connectivity exists and it is possible to establish connections and pass data." />
      <item value="Since Android L, this always returns {@code true}, because the system only returns info for available networks." />
      <item value="because the system only returns info for available networks." />
      <item value="Since Android L, this always returns {@code true}," />
      <item value="The device's radio is turned off, e.g., because airplane mode is enabled.&lt;li&gt;" />
      <item value="he device is on a network other than the home network (i.e., roaming), and data roaming has been disabled.&lt;li&gt;" />
      <item value="he device is out of the coverage area for any network of this type.&lt;li&gt;" />
      <item value="Indicates whether network connectivity is possible. A network is unavailable when a persistent or semi-persistent condition prevents the possibility of connecting to that network. Examples include" />
      <item value="underlying" />
      <item value="TYPE MOBILE SUPL" />
      <item value="An MMS-specific Mobile data connection." />
      <item value="The absence of a connection type." />
      <item value="available" />
      <item value="Persistable Bundle" />
      <item value="previously" />
      <item value="showed" />
      <item value="m Is Binded" />
      <item value="bringing up" />
      <item value="gather Address Lon" />
      <item value="If the task was moved (or it was already at the back) true is returned, else false." />
      <item value="on Safe Mode Changed" />
      <item value="is Safe Mode On" />
      <item value="is Optimization" />
      <item value="No dialpad for the purpose of initiating a phone call." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="1636" />
        <entry key="ENGLISH" value="1637" />
        <entry key="ARABIC" value="1" />
        <entry key="POLISH" value="2" />
        <entry key="GERMAN" value="2" />
        <entry key="FRENCH" value="6" />
        <entry key="DUTCH" value="1" />
        <entry key="CATALAN" value="4" />
        <entry key="CZECH" value="1" />
        <entry key="KANNADA" value="1" />
        <entry key="CROATIAN" value="1" />
        <entry key="LATIN" value="5" />
        <entry key="ROMANIAN" value="6" />
        <entry key="BENGALI" value="2" />
        <entry key="NORWEGIAN" value="1" />
        <entry key="TURKISH" value="1" />
        <entry key="SPANISH" value="3" />
        <entry key="ITALIAN" value="1" />
        <entry key="HINDI" value="2" />
        <entry key="INDONESIAN" value="3" />
        <entry key="VIETNAMESE" value="4" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1608517693781" />
  </component>
  <component name="Settings">
    <option name="foldOriginal" value="true" />
    <option name="ignoreRegExp" value="" />
    <option name="overrideFont" value="true" />
    <option name="phoneticFontFamily" value="Consolas" />
    <option name="translateDocumentation" value="true" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="6e2757bde9036761" />
        <option name="primaryLanguage" value="CHINESE" />
      </youdao-translate>
    </option>
  </component>
</application>