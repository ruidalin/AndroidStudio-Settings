<application>
  <component name="AppStorage">
    <option name="newTranslationDialogWidth" value="590" />
    <option name="newTranslationDialogX" value="824" />
    <option name="newTranslationDialogY" value="450" />
    <option name="pinNewTranslationDialog" value="true" />
    <histories>
      <item value="productivity" />
      <item value="Setmeal" />
      <item value="text Count Inc View" />
      <item value="出行日期" />
      <item value="Constant to return from {@link onStartCommand}: if this service's process is killed while it is started (after returning from {@link onStartCommand}), then leave it in the started state but don't retain this delivered intent. Later the system will try to re-create the service. Because it is in the started state, it will guarantee to call {@link onStartCommand} after creating the new service instance; if there are not any pending start commands to be delivered to the service, it will be called with a null intent object, so you must take care to check for this. &lt;p&gt;This mode makes sense for things that will be explicitly started and stopped to run for arbitrary periods of time, such as a service performing background music playback." />
      <item value="Constant to return from {@link onStartCommand}: if this service's process is killed while it is started (after returning from {@link onStartCommand}), and there are no new start intents to deliver to it, then take the service out of the started state and don't recreate until a future explicit call to {@link ContextstartService Context.startService(Intent)}. The service will not receive a {@link onStartCommand(Intent, int, int)} call with a null Intent because it will not be restarted if there are no pending Intents to deliver. &lt;p&gt;This mode makes sense for things that want to do some work as a result of being started, but can be stopped when under memory pressure and will explicit start themselves again later to do more work. An example of such a service would be one that polls for data from a server: it could schedule an alarm to poll every N minutes by having the alarm start its service. When its {@link onStartCommand} is called from the alarm, it schedules a new alarm for N minutes later, and spawns a thread to do its networking. If its process is killed while doing that check, the service will not be restarted until the alarm goes off." />
      <item value="Constant to return from {@link onStartCommand}: compatibility version of {@link START_STICKY} that does not guarantee that {@link onStartCommand} will be called again after being killed." />
      <item value="START REDELIVER INTENT" />
      <item value="START NOT STICKY" />
      <item value="START CONTINUATION MASK" />
      <item value="START STICKY COMPATIBILITY" />
      <item value="Roadbook Setmeal Activity" />
      <item value="套餐" />
      <item value="taoca" />
      <item value="freed" />
      <item value="on Load Cleared" />
      <item value="get Intrinsic Height" />
      <item value="get Minimum Width" />
      <item value="uninstall Silent" />
      <item value="STATUS FAILURE" />
      <item value="Priority" />
      <item value="favorite Journey" />
      <item value="&lt;!-- The relative proportion of horizontal space that should be allocated to this view during excess space distribution. --&gt;" />
      <item value="add journey" />
      <item value="Register for a single location update using the named provider and a callback." />
      <item value="request Single Update" />
      <item value="undo" />
      <item value="dimension" />
      <item value="resolve Size And State" />
      <item value="combine Measured States" />
      <item value="The row boundary delimiting the top of the group of cells occupied by this view." />
      <item value="When set to true, forces column boundaries to appear in the same order as column indices." />
      <item value="column Order Preserved" />
      <item value="Grow" />
      <item value="flex Grow" />
      <item value="order" />
      <item value="layout flex Grow" />
      <item value="layout flex Shrink" />
      <item value="Negative numbers are invalid." />
      <item value="The attribute that specifies the maximum number of flex lines. This attribute is effective only when the flexWrap attribute is &quot;wrap&quot; or &quot;wrap_reverse&quot;." />
      <item value="reverse" />
      <item value="wrap reverse" />
      <item value="poll" />
      <item value="Returns the same Intent object, for chaining multiple calls into a single statement." />
      <item value="The name of a class inside of the application package that will be used as the component for this Intent." />
      <item value="steerwheel" />
      <item value="wheel" />
      <item value="steer" />
      <item value="KEYCODE BUTTON MODE" />
      <item value="KEYCODE PAGE UP" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="2112" />
        <entry key="ENGLISH" value="2113" />
        <entry key="ARABIC" value="1" />
        <entry key="POLISH" value="3" />
        <entry key="GERMAN" value="5" />
        <entry key="FRENCH" value="7" />
        <entry key="GUJARATI" value="1" />
        <entry key="DUTCH" value="3" />
        <entry key="CATALAN" value="5" />
        <entry key="CZECH" value="1" />
        <entry key="KANNADA" value="1" />
        <entry key="CROATIAN" value="1" />
        <entry key="LATIN" value="7" />
        <entry key="ROMANIAN" value="7" />
        <entry key="BENGALI" value="2" />
        <entry key="NORWEGIAN" value="3" />
        <entry key="SWEDISH" value="1" />
        <entry key="TURKISH" value="1" />
        <entry key="SPANISH" value="3" />
        <entry key="ITALIAN" value="3" />
        <entry key="HINDI" value="4" />
        <entry key="INDONESIAN" value="3" />
        <entry key="VIETNAMESE" value="4" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1618992323890" />
  </component>
  <component name="Settings">
    <option name="foldOriginal" value="true" />
    <option name="overrideFont" value="true" />
    <option name="phoneticFontFamily" value="Consolas" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="6e2757bde9036761" />
        <option name="primaryLanguage" value="CHINESE" />
      </youdao-translate>
    </option>
  </component>
</application>